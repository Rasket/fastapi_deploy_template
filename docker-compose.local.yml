version: '3.8'

services:
  backend:
    container_name: "${compose_project_service_name}"
    build:
      context: .
      dockerfile: ./Dockerfile.local
    restart: unless-stopped
    command: bash -c 'alembic upgrade head; python3 main.py' # apply migrations if needed
    env_file:
      - docker.env
    environment:
      - url_path=${traefik_local_path}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - DB_HOST=${compose_project_db_name}
    expose:
      - 80
    volumes:
      - /var/log/service-logs/:/var/log/service-logs/
      - ./app:/app
    labels:
      - traefik.enable=true
      - "traefik.docker.network=${traefik_network_name_local}"
      - traefik.http.routers.${compose_project_service_name}.rule=Host(`${traefik_local_host}`) && PathPrefix(`${traefik_local_path}`)
      - traefik.http.services.${compose_project_service_name}.loadbalancer.server.port=80

    networks:
      - ${traefik_network_name_local}
      - ${database_network_name_local}


  database:
    container_name: "${compose_project_db_name}"
    image: postgres:14.8-alpine3.18
    env_file:
      - docker.env
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: "/var/lib/postgresql/data/${compose_db_data}"
    volumes:
      - ./database_init:/docker-entrypoint-initdb.d
      - ${POSTGRE_VOLUME_NAME}:/var/lib/postgresql/data
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - ${database_network_name_local}

volumes:
  # insert-your-volume ${POSTGRE_VOLUME_NAME}:

networks:
  # traefik-net ${traefik_network_name_local}:
    name: traefik-net
    external: true
  # db-service-network ${database_network_name_local}:
    external: true
